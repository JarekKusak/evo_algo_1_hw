Jaroslav Kusák

Vyzkoušel jsem jednoduchý genetický algoritmus na problém OneMax a na střídavý vzor (1010.., 0101..).

Cílem bylo zjistit, jak se mění rychlost konvergence algoritmu při různém nastavení základních operátorů - mutace a křížení.

Nastavení algoritmu:
Populace 50 jedinců
Délka jedince 40 bitů
100 generací
Elistismus 2
Výběr podle rulety
Každé nastavení bylo spouštěno 10x a v grafech je zobrazena průměrná nejlepší fitness v jednotlivých generacích.

OneMax
Zkoumal jsem vliv pravděpodobnosti mutace (0.001, 0.01 a 0.05) při pevném crossoveru 0.9.
- Nejlépe fungovala mutace = 0.01, která dosáhla nejvyšší fitness i nejrychlejší konvergence.
- Příliš malá mutace (0.001) konvergenci zpomalila.
- Příliš velká mutace (0.05) měla tendenci rozbíjet již dobrá řešení a skončila s nižší kvalitou výsledků.

Střídavý vzor
Zkoumal jsem vliv pravděpodobnosti křížení (0.6, 0.8, 0.95) při mutaci 0.01.
- Všechny tři hodnoty dosáhly podobného výsledku.
- Vyšší crossover (0.95) měl rychlejší start a lehce vyšší konečnou fitness.
- Nižší crossover (0.6) konvergoval o něco pomaleji.

Celkově algoritmus ve všech případech konverguje.
Rychlost a stabilita závisí hlavně na zvolené míře mutace a křížení, menší hodnoty zajišťují stabilitu, vyšší zase přinášejí rychlejší, ale méně plynulý vývoj.